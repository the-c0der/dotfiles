#export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.ustc.edu.cn/homebrew-bottles"
export HOMEBREW="/opt/homebrew"
[ `uname -m` = "x86_64" ] && export HOMEBREW="/usr/local"

export PATH="$HOMEBREW/sbin:$HOMEBREW/bin:/usr/sbin:/usr/bin:/sbin:/bin"
[ -d /opt/bin ] && export PATH="/opt/bin:$PATH"
export MANPATH="$HOMEBREW/man:$MANPATH"
[ -e $HOMEBREW/bin/bat ]           && alias cat='bat --paging never'
[ -e $HOMEBREW/bin/prettyping ]    && alias ping='prettyping --nolegend'
[ -e $HOMEBREW/bin/htop ]          && alias top='sudo htop'
[ -e $HOMEBREW/bin/diff-so-fancy ] && alias diff='diff-so-fancy'
#[ -e $HOMEBREW/bin/ncdu ]          && alias du='ncdu --color dark -rr -x'
[ -e $HOMEBREW/bin/tldr ]          && alias help='tldr'
[ -e $HOMEBREW/bin/youtube-dl ]    && alias youtube-dl="youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]' --write-sub --sub-lang 'zh-CN,zh-Hans,zh-TW,zh-Hant,en' --convert-subs 'srt' -o '%(uploader)s/%(playlist)s/%(playlist_index)03d.%(title)s.%(id)s.%(ext)s'"
[ -e $HOMEBREW/bin/jira ]          && eval "$(jira --completion-script-bash)"

# Google Cloud
export CLOUDSDK_PYTHON="$HOMEBREW/opt/python@3.8/bin/python3"
export GOOGLE_CLOUD_SDK_HOME='$HOMEBREW/Caskroom/google-cloud-sdk/latest/google-cloud-sdk'
[ -e "$GOOGLE_CLOUD_SDK_HOME/bin/gcloud" ] && source "$GOOGLE_CLOUD_SDK_HOME/path.zsh.inc" && source "$GOOGLE_CLOUD_SDK_HOME/completion.zsh.inc"

# Matalab
[ -f /Applications/MATLAB_R2019a.app/bin/matlab ] && alias matlab-cli='/Applications/MATLAB_R2019a.app/bin/matlab -nodisplay -nosplash -nodesktop'

# Java & Android
export JAVA_HOME="/opt/jdk"
export ANDROID_SDK_ROOT="/opt/android-sdk"
export ANDROID_HOME=$ANDROID_SDK_ROOT

export GUILE_LOAD_PATH="$HOMEBREW/share/guile/site/3.0"
export GUILE_LOAD_COMPILED_PATH="$HOMEBREW/lib/guile/3.0/site-ccache"
export GUILE_SYSTEM_EXTENSIONS_PATH="$HOMEBREW/lib/guile/3.0/extensions"
export GUILE_TLS_CERTIFICATE_DIRECTORY="/usr/local/etc/gnutls/"

for dir in "ruby/bin" "openssl@1.1/bin" "coreutils/libexec/gnubin" "gettext/bin" "texinfo/bin" "flutter/bin"; do
    [ -d "$HOMEBREW/opt/$dir" ] && export PATH="$HOMEBREW/opt/$dir:$PATH"
done

# Libraries & Flags
export LDFLAGS="-L$HOMEBREW/opt/ruby/lib"
export CPPFLAGS="-I$HOMEBREW/opt/ruby/include"
export PKG_CONFIG_PATH="$HOMEBREW/opt/ruby/lib/pkgconfig"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/anaconda/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/anaconda/etc/profile.d/conda.sh" ]; then
        . "/opt/anaconda/etc/profile.d/conda.sh"
    else
        export PATH="/opt/anaconda/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

function pfd() {
  # present finder directory
  osascript 2>/dev/null <<EOF
  tell application "Finder"
    return POSIX path of (target of first window as text)
  end tell
EOF
}
function cdf() {
  # cd to Finder Directory
  cd "$(pfd)"
}